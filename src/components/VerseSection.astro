---
import { fade } from 'astro:transitions';

const { verses } = Astro.props;
---

<style>
  .verses-section {
    height: 100%;
    margin-left: 0px;
    margin-right: 0px;
    margin-bottom: 0.5rem;
    /* margin-left: 0.5rem; mobile */
    /* margin-right: 0.5rem; mobile */
    overflow-y: auto;
  }

  .verse-item {
    font-size: 1.2rem;
    font-weight: 400;
    line-height: 2rem;
    cursor: pointer;
    margin-top: 1rem;
    color: #010101;
  }

  .verse-no {
    display: inline;
    vertical-align: text-top;
    color: #a30400;
    font-weight: 700;
    font-size: 0.8rem;
    line-height: normal;
    top: auto;
    /* margin-left: 0.5rem; */
    /* margin-right: 0.5rem; */
  }

  .selected {
    background-color: yellow;
  }
</style>
<div class="verses-section" transition:animate={fade({ duration: '0.4s' })}>
  {
    verses.map((item, i) => (
      <p class="verse-item">
        <sup class="verse-no">{i + 1}</sup>
        {item.verse}
      </p>
    ))
  }
</div>
<script>
  const items = document.getElementsByClassName("verse-item");
  Array.from(items).forEach((it, i) =>
    it.addEventListener("click", () => {
      const { selectedVerses = [], ...state } = store.get();
      if (selectedVerses.includes(i)) {
        it.classList.remove("selected");
        store.set({
          ...state,
          selectedVerses: selectedVerses.filter((t) => t !== i),
        });
      } else {
        it.classList.add("selected");
        store.set({
          ...state,
          selectedVerses: selectedVerses.concat([i]),
        });
      }
    })
  );
</script>
